@model Backend.Models.TournamentTeamView

@{
    ViewBag.Title = "Agregando";
}

<h2>Agregar equipo al torneo</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
         
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TournamentGroupId)

        <div class="form-group">
            <div class="control-label col-md-2"> Liga</div>
            <div class="col-md-10">
                @Html.DropDownList("LeagueId", null, htmlAttributes: new { @class = "form-control MasterDdl" })
                @Html.ValidationMessageFor(model => model.LeagueId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-md-2"> Equipo</div>
            <div class="col-md-10">
                @Html.DropDownList("TeamId", null, htmlAttributes: new { @class = "form-control DetailDdl" })
                @Html.ValidationMessageFor(model => model.TeamId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"> Partidos Jugados</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.MatchesPlayed, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MatchesPlayed, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"> Partidos Ganados</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.MatchesWon, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MatchesWon, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"> Partidos Perdidos</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.MatchesLost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MatchesLost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"> Partidos Empatados</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.MatchesTied, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MatchesTied, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"> Puntos a Favor</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FavorGoals, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FavorGoals, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"> Puntos en Contra</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.AgainstGoals, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AgainstGoals, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"> Puntos</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Points, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Points, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"> Posicion</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a class="btn btn-success" href="/Tournaments/DetailsGroup/@Model.TournamentGroupId">
                    <span class="glyphicon glyphicon-circle-arrow-left"></span> Retornar al grupo
                </a>

                <button type="submit" class="btn btn-primary">
                    <i class="glyphicon glyphicon-floppy-disk"></i> Guardar
                </button>

            </div>
        </div>
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script type="text/javascript">
            var Url = '@Url.Action("GetTeams","Generic")';
        </script>
    }

}


